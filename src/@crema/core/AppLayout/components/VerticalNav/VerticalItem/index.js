import React, {useEffect, useMemo, useState} from 'react';
import {Icon, ListItemText} from '@mui/material';
import clsx from 'clsx';
import PropTypes from 'prop-types';
import AppBadge from '@crema/core/AppBadge';
import AppNavLink from '@crema/core/AppNavLink';
import Box from '@mui/material/Box';
import IntlMessages from '../../../../../utility/IntlMessages';
import {checkPermission} from '../../../../../utility/helper/RouteHelper';
import {useAuthUser} from '../../../../../utility/AuthHooks';
import VerticalNavItem from './VerticalNavItem';
import {useSelector} from 'react-redux';
import {alpha} from '@mui/material/styles';
import {useNavigate} from 'react-router-dom';
import HelpOutlineOutlinedIcon from '@mui/icons-material/HelpOutlineOutlined';
import FmdGoodOutlinedIcon from '@mui/icons-material/FmdGoodOutlined';

import {ReactComponent as ActiveTrip} from 'pages/SVG/Layer_1.svg';
import {ReactComponent as LiveTracking} from 'pages/SVG/mapLocater.svg';
import {ReactComponent as Roster} from 'pages/SVG/Roster.svg';
import {ReactComponent as Adhoc} from 'pages/SVG/Adhoc.svg';
import {ReactComponent as Leave} from 'pages/SVG/Leave.svg';
import {ReactComponent as RateCard} from 'pages/SVG/RateCard.svg';
import {ReactComponent as Compliance} from 'pages/SVG/Compliances.svg';
import {ReactComponent as Reports} from 'pages/SVG/Reports.svg';
import {ReactComponent as Billing} from 'pages/SVG/Billing.svg';
import {ReactComponent as IVR} from 'pages/SVG/IVR.svg';
import {ReactComponent as Invoicing} from 'pages/SVG/Invoicing.svg';
import {ReactComponent as Feedback} from 'pages/SVG/FeedBack.svg';
import {ReactComponent as Trainingvideo} from 'pages/SVG/Training Video.svg';
import {Announcement} from '@mui/icons-material';
import {ReactComponent as Employees} from 'pages/SVG/employee.svg';
import {ReactComponent as Shifts} from 'pages/SVG/Shifts.svg';
import {ReactComponent as Departments} from 'pages/SVG/Departments.svg';
import {ReactComponent as BusinessUnits} from 'pages/SVG/BussinesUnit.svg';
import {ReactComponent as Vendors} from 'pages/SVG/Vendors.svg';
import {ReactComponent as Drivers} from 'pages/SVG/Drivers.svg';
import {ReactComponent as Vehicle} from 'pages/SVG/Vehicle.svg';
import {ReactComponent as Holidays} from 'pages/SVG/Holidays.svg';
import {ReactComponent as NodalPoints} from 'pages/SVG/NodalPoints.svg';
import {ReactComponent as EmployeeCategory} from 'pages/SVG/EmployeeCategory.svg';
import {ReactComponent as Escorts} from 'pages/SVG/Escortss.svg';
import {ReactComponent as EscortAgency} from 'pages/SVG/EscortAgency.svg';
import {ReactComponent as SiteOffice} from 'pages/SVG/Siteoffice.svg';
import {ReactComponent as SpecialEmployee} from 'pages/SVG/Special-employee.svg';
import {ReactComponent as Penalty} from 'pages/SVG/Penalty.svg';
import {ReactComponent as VehicleVariant} from 'pages/SVG/VehicleVariant.svg';
import {ReactComponent as RouteMaster} from 'pages/SVG/Routes.svg';
import {ReactComponent as VRP} from 'pages/SVG/AutoGenerated.svg';
import {ReactComponent as RouteList} from 'pages/SVG/routelists.svg';
import {ReactComponent as RosterSettings} from 'pages/SVG/RosterSettings.svg';
import {ReactComponent as RoutingRule} from 'pages/SVG/RoutingRule.svg';
import {ReactComponent as SOSSettings} from 'pages/SVG/SOSSettings.svg';
import {ReactComponent as LeaveSetting} from 'pages/SVG/LeaveSettings.svg';
import {ReactComponent as PushNotification} from 'pages/SVG/PushNotification.svg';
import {ReactComponent as ComplianceSetting} from 'pages/SVG/ComplianceSetting.svg';
import {ReactComponent as DriverNotifications} from 'pages/SVG/ComplianceSetting.svg';
import LocalGasStationIcon from '@mui/icons-material/LocalGasStation';
import {HiUserCircle} from 'react-icons/hi';
import DescriptionIcon from '@mui/icons-material/Description';
import GpsFixedOutlinedIcon from '@mui/icons-material/GpsFixedOutlined';
import PinDropIcon from '@mui/icons-material/PinDrop';
import SupportIcon from '@mui/icons-material/Support';

const VerticalItem = ({level, item}) => {
  const navigate = useNavigate(); // Do not Remove this.
  const {user} = useAuthUser();

  const hasPermission = useMemo(
    () => checkPermission(item.permittedRole, user.role),
    [item.permittedRole, user.role],
  );
  if (!hasPermission) {
    return null;
  }
  const AdhocValue = useSelector(({settings}) => settings.adhocCount);
  const LeaveValue = useSelector(({settings}) => settings.leaveCount);
  const LeaveValueManager = useSelector(
    ({settings}) => settings.leaveCountManager,
  );
  const AdhocValueManager = useSelector(
    ({settings}) => settings.adhocCountManager,
  );
  const ScheduleValueManager = useSelector(
    ({settings}) => settings.scheduleCountManager,
  );

  const [fc, setFC] = useState();
  useEffect(() => {
    if (window.location.pathname == item.url)
      setFC(user?.userList?.theme?.hoverColor || 'black');
    else setFC(user?.userList?.theme?.fontColor || 'white');
  }, [navigate, user]);
  return (
    <VerticalNavItem
      level={level}
      button
      component={AppNavLink}
      to={item.url}
      activeClassName='active'
      exact={item.exact}
    >
      {item.icon && (
        <Box component='span'>
          <Icon
            sx={{
              fontSize: 18,
              display: 'block',
              mr: 4,
            }}
            className={clsx('nav-item-icon', 'material-icons-outlined')}
            color='action'
          >
            {!item.iconUrl && item.icon}
            {item.iconUrl == 'ActiveTrip' && (
              <ActiveTrip fill={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'LiveTracking' && (
              <LiveTracking fill={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'Roster' && (
              <Roster fill={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'Adhoc' && (
              <Adhoc fill={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'Leave' && (
              <Leave fill={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'RateCard' && (
              <RateCard fill={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'Compliance' && (
              <Compliance fill={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'Reports' && (
              <Reports fill={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'Billing' && (
              <Billing fill={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'IVR' && (
              <IVR fill={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'Invoicing' && (
              <Invoicing fill={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'Feedback' && (
              <Feedback fill={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'Trainingvideo' && (
              <Trainingvideo
                fill={fc}
                height='1em'
                width='1em'
              />
            )}
            {item.iconUrl == 'Announcement' && (
              <Announcement fill={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'Employees' && (
              <Employees fill={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'Shifts' && (
              <Shifts fill={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'Departments' && (
              <Departments fill={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'BusinessUnits' && (
              <BusinessUnits fill={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'Vendors' && (
              <Vendors fill={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'Drivers' && (
              <Drivers fill={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'Vehicle' && (
              <Vehicle fill={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'Vehicle' && (
              <Vehicle fill={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'Holidays' && (
              <Holidays fill={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'NodalPoints' && (
              <NodalPoints fill={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'EmployeeCategory' && (
              <EmployeeCategory fill={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'Escorts' && (
              <Escorts fill={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'EscortAgency' && (
              <EscortAgency fill={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'SiteOffice' && (
              <SiteOffice fill={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'SpecialEmployee' && (
              <SpecialEmployee fill={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'Penalty' && (
              <Penalty fill={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'VehicleVariant' && (
              <VehicleVariant fill={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'GpsVendors' && <GpsFixedOutlinedIcon fill={fc} />}
            {item.iconUrl == 'GpsLists' && <PinDropIcon fill={fc} />}
            {item.iconUrl == 'RouteMaster' && (
              <RouteMaster fill={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'VRP' && (
              <VRP fill={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'RouteList' && (
              <RouteList fill={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'RosterSettings' && (
              <RosterSettings fill={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'RoutingRule' && (
              <RoutingRule fill={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'LeaveSetting' && (
              <LeaveSetting fill={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'SOSSettings' && (
              <SOSSettings fill={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'PushNotification' && (
              <PushNotification fill={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'ComplianceSetting' && (
              <ComplianceSetting fill={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'DriverNotifications' && (
              <DriverNotifications fill={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'Routes' && (
              <RouteMaster fill={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'YourRides' && (
              // <RouteMaster fill={fc} height='1em' width='1em' />FmdGoodOutlinedIcon
              <FmdGoodOutlinedIcon fill={fc} style={{fontSize: '22px'}} />
              // <img
              //   className='sidebar-icon'
              //   src={'/assets/images/liveLocation.svg'}
              //    height='1em' width='1em'
              // />
            )}
            {item.iconUrl == 'FuelTracking' && (
              <LocalGasStationIcon color={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'Taxes' && (
              <HiUserCircle color={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'CorpBilling' && (
              <DescriptionIcon color={fc} height='1em' width='1em' />
            )}
            {item.iconUrl == 'Support' && (
              // <SupportIcon color={fc} height='20px' width='20px' />
              <HelpOutlineOutlinedIcon
                color={fc}
                // height='20px' width='20px'
                style={{fontSize: '22px'}}
              />
              // <img
              //   className='sidebar-icon'
              //   src={'/assets/images/support@3x.png'}
              //    height='1em' width='1em'
              //    style={{color:"white"}}
              // />
            )}
          </Icon>
        </Box>
      )}
      <ListItemText
        className='nav-item-content'
        primary={<>{item.messageId}</>}
        classes={{primary: 'nav-item-text'}}
      />

      {item.id == 'adhocTrip' && (
        <Box sx={{mr: 3.5}} className='menu-badge'>
          <AppBadge count={AdhocValue} color={item.color} />
        </Box>
      )}
      {item.id == 'AdhocTrips' && (
        <Box sx={{mr: 3.5}} className='menu-badge'>
          <AppBadge count={AdhocValueManager} color={item.color} />
        </Box>
      )}
      {item.id == 'Leave' && (
        <Box sx={{mr: 3.5}} className='menu-badge'>
          <AppBadge count={LeaveValue} color={item.color} />
        </Box>
      )}
      {item.id == 'LeaveManagement' && user?.role == 'MANAGER' && (
        <Box sx={{mr: 3.5}} className='menu-badge'>
          <AppBadge count={LeaveValueManager} color={item.color} />
        </Box>
      )}
      {item.module == 'RosterManager' && (
        <Box sx={{mr: 3.5}} className='menu-badge'>
          <AppBadge count={ScheduleValueManager} color={item.color} />
        </Box>
      )}
    </VerticalNavItem>
  );
};

VerticalItem.propTypes = {
  item: PropTypes.shape({
    id: PropTypes.string.isRequired,
    title: PropTypes.string,
    icon: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),
    hoverIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.string]), // RAJ NEW LINE RESTTTTTT====>>>>>>>>
    permittedRole: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),
    exact: PropTypes.bool,
    messageId: PropTypes.string,
    count: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    url: PropTypes.string,
    color: PropTypes.string,
  }),
  level: PropTypes.number,
};

VerticalItem.defaultProps = {};

export default React.memo(VerticalItem);
